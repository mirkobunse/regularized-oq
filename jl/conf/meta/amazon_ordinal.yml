#
# conf/meta/amazon_ordinal.yml
#
# Meta-configuration for comparing quantification methods on Amazon
# customer review text data.
#
job: amazon # this file configures the function Job.<job>
seed: 876 # random number generator seed
M_val: 1000 # number of validation samples
M_tst: 5000 # number of testing samples
app_oq_frac: 0.5 # the fraction of samples to keep in APP-OQ

# output of configuration expansion and of experiments
configfile: conf/gen/amazon_ordinal_$(id).yml # $(id) is replaced by the data ID
outfile: res/csv/amazon_ordinal_$(id).csv
valfile: res/csv/amazon_ordinal_$(id)_val.csv

data:
  - id: roberta
    path: /mnt/data/amazon-oq-bk/roberta
    type: dense_vector
    evaluate_real_data: true

# all classifiers over which the quantification methods are optimized
classifier:

  - classifier: LogisticRegression
    method_id: logReg
    name: "LR ($w=$(class_weight), C=$(C)$)"
    parameters:
      C: [ 0.001, 0.01, 0.1, 1.0, 10.0 ]
      class_weight: [ "balanced", ~ ]
    cv: # parameters of a CVClassifier
      n_estimators: 10
      random_state: 876

# all methods to be compared
method:

  # regularized implementations of OQ methods by Castaño et al. (2022)
  - method_id: edy
    name: "o-EDy ($\\tau=$(τ)$, d=EMD) on $(classifier)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]
      distance: EarthMovers

  - method_id: pdf
    name: "o-PDF ($\\tau=$(τ), J=$(n_bins)$, d=s-EMD) on $(classifier)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]
      n_bins: [ 20, 40 ]
      distance: EarthMoversSurrogate

  # unfolding methods from QUnfold.jl
  - method_id: ibu
    name: "IBU ($o=$(o), i=$(λ)$) on $(classifier)"
    transformer: classifier
    parameters:
      o: [ 0, 1 ]
      λ: [ 1e-1, 1e-2 ]

  - method_id: run
    name: "RUN ($\\tau=$(τ)$) on $(classifier)"
    transformer: classifier
    parameters:
      τ: [ 1e1, 1e-1, 1e-3 ] # count-based loss of RUN requires larger τ values

  - method_id: osld # ordinal SLD
    name: "o-SLD ($o=$(o), i=$(λ)$) on $(classifier)"
    parameters:
      o: [ 0, 1 ]
      λ: [ 1e-1, 1e-2 ]

  - method_id: oacc # ordinal ACC
    name: "o-ACC ($\\tau=$(τ)$) on $(classifier)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]

  - method_id: opacc # ordinal PACC
    name: "o-PACC ($\\tau=$(τ)$) on $(classifier)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]

  - method_id: ohdx # ordinal HDx
    name: "o-HDx ($\\tau=$(τ)$, $(n_bins) bins per feature)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]
      n_bins: [2, 3, 4]

  - method_id: ohdy # ordinal HDy
    name: "o-HDy ($\\tau=$(τ)$, $(n_bins) bins per class) on $(classifier)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]
      n_bins: [2, 4]
