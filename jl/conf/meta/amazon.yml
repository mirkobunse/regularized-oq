#
# conf/meta/amazon.yml
#
# Meta-configuration for comparing quantification methods on Amazon customer review text data.
#
job: amazon # this file configures the function Job.<job>
seed: 876 # random number generator seed
M_val: 1000 # number of validation samples
M_tst: 5000 # number of testing samples

# output of configuration expansion and of experiments
configfile: conf/gen/amazon_$(id).yml # $(id) is replaced by the data ID
outfile: res/csv/amazon_$(id).csv
valfile: res/csv/amazon_$(id)_val.csv

data:
  - id: tfidf
    path: /mnt/data/amazon-oq-bk/tfidf
    type: raw_text # specify how to read this data
  - id: roberta
    path: /mnt/data/amazon-oq-bk/roberta
    type: dense_vector

# the sampling protocols with which to evaluate
protocol:
  sampling: app # app or npp
  n_splits: 5 # investigate multiple levels of curvature + all data

# all classifiers over which the quantification methods are optimized
classifier:

  - classifier: LogisticRegression
    method_id: logReg
    name: "LR ($w=$(class_weight), C=$(C)$)"
    parameters:
      C: [ 0.001, 0.01, 0.1, 1.0, 10.0 ]
      class_weight: [ "balanced", ~ ]
    bagging: # parameters of a BaggingClassifier
      n_estimators: 10
      random_state: 876
      oob_score: true

# all methods to be compared
method:

  # Ordinal Quantification Tree (CAUTION: will break with costly ensemble skconfigs)
  - method_id: oqt
    name: "OQT ($v=$(val_split)$) on $(classifier)"
    parameters:
      epsilon: 1e-6
      val_split: [ 0.334 ] # 1/3

  # AdjustedRegressAndCount (by Andrea Esuli)
  - method_id: arc
    name: "ARC ($v=$(val_split)$) on $(classifier)"
    parameters:
      val_split: [ 0.334 ]

  # unfolding methods from QUnfold.jl
  - method_id: ibu
    name: "IBU ($o=$(o), i=$(λ)$) on $(classifier)"
    transformer: classifier
    parameters:
      o: [ 0, 1, 2 ]
      λ: [ 3e-1, 1e-1, 3e-2, 1e-2, 3e-3, 1e-3 ]

  - method_id: run
    name: "RUN ($\\tau=$(τ)$) on $(classifier)"
    transformer: classifier
    parameters:
      τ: [ 3e-2, 1e-2, 3e-3, 1e-3, 3e-4, 1e-4, 3e-5, 1e-6 ]

  # quantification methods from QUnfold.jl
  - method_id: cc
    name: "CC on $(classifier)"

  - method_id: pcc
    name: "PCC on $(classifier)"

  - method_id: acc # softmax ACC
    name: "ACC on $(classifier)"

  - method_id: pacc # softmax PACC
    name: "PACC on $(classifier)"

  - method_id: sld # a.k.a. EMQ
    name: "SLD on $(classifier)"

  - method_id: osld # ordinal SLD
    name: "o-SLD ($o=$(o), i=$(λ)$) on $(classifier)"
    parameters:
      o: [ 0, 1, 2 ]
      λ: [ 1e-1, 3e-2, 1e-2, 3e-3, 1e-3 ]

  - method_id: oacc # ordinal ACC
    name: "o-ACC (\\tau=$(τ)) on $(classifier)" # $r=$(regularization)
    parameters:
      τ: [ 1e-2, 3e-3, 1e-3, 3e-4, 1e-4, 1e-5, 1e-6, 1e-9 ]
      # TODO regularization: [ "curvature", "norm" ]

  - method_id: opacc # ordinal PACC
    name: "o-PACC (\\tau=$(τ)) on $(classifier)" # $r=$(regularization)
    parameters:
      τ: [ 1e-2, 3e-3, 1e-3, 3e-4, 1e-4, 1e-5, 1e-6, 1e-9 ]
      # TODO regularization: [ "curvature", "norm" ]
