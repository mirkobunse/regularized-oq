#
# conf/meta/amazon.yml
#
# Meta-configuration for comparing quantification methods on Amazon
# customer review text data.
#
job: amazon # this file configures the function Job.<job>
seed: 876 # random number generator seed
M_val: 2000 # number of validation samples
M_tst: 2000 # TODO: INCREASE TO 5000; number of testing samples
app_oq_frac: 0.5 # the fraction of samples to keep in APP-OQ

# output of configuration expansion and of experiments
configfile: conf/gen/amazon_$(id).yml # $(id) is replaced by the data ID
outfile: res/csv/amazon_$(id).csv
valfile: res/csv/amazon_$(id)_val.csv

data:
  - id: tfidf
    path: /mnt/data/amazon-oq-bk/tfidf
    type: raw_text # specify how to read this data
  - id: roberta
    path: /mnt/data/amazon-oq-bk/roberta
    type: dense_vector

# all classifiers over which the quantification methods are optimized
classifier:

  - classifier: LogisticRegression
    method_id: logReg
    name: "LR ($w=$(class_weight), C=$(C)$)"
    parameters:
      C: [ 0.001, 0.01, 0.1, 1.0, 10.0 ]
      class_weight: [ "balanced", ~ ]
    bagging: # parameters of a BaggingClassifier
      n_estimators: 100
      random_state: 876
      oob_score: true

# all methods to be compared
method:

  # # early OQ methods
  # - method_id: oqt
  #   name: "OQT ($v=$(val_split)$) on $(classifier)"
  #   parameters:
  #     epsilon: 1e-6
  #     val_split: [ 0.334 ] # 1/3

  # - method_id: arc
  #   name: "ARC ($v=$(val_split)$) on $(classifier)"
  #   parameters:
  #     val_split: [ 0.334 ]

  # original implementations of OQ methods by Castaño et al. (2022)
  - method_id: castano-edy
    name: "Casta{\\~{n}}o EDy (d=EMD) on $(classifier)"
    parameters:
      distances: emd_distances
      decomposer: none
      option: bagging_decomp

  - method_id: castano-pdf
    name: "Casta{\\~{n}}o PDF (J=$(n_bins), d=EMD) on $(classifier)"
    parameters:
      n_bins: [ 5, 10 ] # bins per class, equivalent to [ 20, 40 ] in QUnfold
      decomposer: none
      option: bagging_decomp

  # regularized implementations of OQ methods by Castaño et al. (2022)
  - method_id: edy
    name: "o-EDy ($\\tau=$(τ)$, d=EMD) on $(classifier)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]
      distance: EarthMovers

  - method_id: pdf
    name: "o-PDF ($\\tau=$(τ), J=$(n_bins)$, d=s-EMD) on $(classifier)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]
      n_bins: [ 20, 40 ]
      distance: EarthMoversSurrogate

  # unfolding methods from QUnfold.jl
  - method_id: ibu
    name: "IBU ($o=$(o), i=$(λ)$) on $(classifier)"
    transformer: classifier
    parameters:
      o: [ 0, 1, 2 ]
      λ: [ 1e-1, 1e-2, 0.0 ]

  - method_id: run
    name: "RUN ($\\tau=$(τ)$) on $(classifier)"
    transformer: classifier
    parameters:
      τ: [ 1e3, 1e1, 1e-1 ] # count-based loss of RUN requires larger τ values

  - method_id: svd
    name: "SVD ($\\tau=$(τ)$) on $(classifier)"
    transformer: classifier
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]

  # quantification methods from QUnfold.jl
  - method_id: cc
    name: "CC on $(classifier)"

  - method_id: pcc
    name: "PCC on $(classifier)"

  - method_id: acc # softmax ACC
    name: "ACC on $(classifier)"

  - method_id: pacc # softmax PACC
    name: "PACC on $(classifier)"

  - method_id: sld # a.k.a. EMQ
    name: "SLD on $(classifier)"

  - method_id: hdx
    name: "HDx ($(n_bins) bins per feature)"
    parameters:
      n_bins: [2, 3, 4]

  - method_id: hdy
    name: "HDy ($(n_bins) bins per class) on $(classifier)"
    parameters:
      n_bins: [2, 4]

  - method_id: osld # ordinal SLD
    name: "o-SLD ($o=$(o), i=$(λ)$) on $(classifier)"
    parameters:
      o: [ 0, 1, 2 ]
      λ: [ 1e-1, 1e-2 ]

  - method_id: oacc # ordinal ACC
    name: "o-ACC ($\\tau=$(τ)$) on $(classifier)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]

  - method_id: opacc # ordinal PACC
    name: "o-PACC ($\\tau=$(τ)$) on $(classifier)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]

  - method_id: ohdx # ordinal HDx
    name: "o-HDx ($\\tau=$(τ)$, $(n_bins) bins per feature)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]
      n_bins: [2, 3, 4]

  - method_id: ohdy # ordinal HDy
    name: "o-HDy ($\\tau=$(τ)$, $(n_bins) bins per class) on $(classifier)"
    parameters:
      τ: [ 1e-1, 1e-3, 1e-5 ]
      n_bins: [2, 4]
